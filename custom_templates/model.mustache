/*
 * {{appName}}
 *
 * {{appDescription}}
 *
 * The version of the OpenAPI document: {{appVersion}}
{{#version}} * 
{{/version}}
 * Generated by: https://openapi-generator.tech
 */

{{>partial_header}}
use crate::models;
use serde::{Deserialize, Serialize};
{{#hasEnums}}
{{#vars}}
{{#isEnum}}
use serde_json::Value;
{{/isEnum}}
{{/vars}}
{{/hasEnums}}
use chrono::{DateTime, NaiveDate, Utc};
{{#models}}
{{#model}}
{{#description}}
/// {{{classname}}} : {{{description}}}
{{/description}}
{{^description}}
/// {{{classname}}}
{{/description}}
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct {{classname}} {
{{#vars}}
{{#description}}
    /// {{{description}}}
{{/description}}
{{#isEnum}}
    {{#allowableValues}}
    {{#enumVars}}
    {{#description}}
    /// {{{description}}}
    {{/description}}
    {{/enumVars}}
    {{/allowableValues}}
{{/isEnum}}
    #[serde(rename = "{{{baseName}}}"{{^required}}, skip_serializing_if = "Option::is_none"{{/required}})]
    pub {{name}}: {{#required}}{{#isNullable}}Option<{{/isNullable}}{{/required}}{{^required}}Option<{{/required}}{{>model_type}}{{#required}}{{#isNullable}}>{{/isNullable}}{{/required}}{{^required}}>{{/required}},
{{/vars}}
}

impl {{classname}} {
    pub fn new({{#requiredVars}}{{name}}: {{>model_type}}{{^-last}}, {{/-last}}{{/requiredVars}}) -> {{classname}} {
        {{classname}} {
{{#vars}}
{{#required}}
            {{name}}: {{name}},
{{/required}}
{{^required}}
            {{name}}: {{^defaultValue}}None{{/defaultValue}}{{#defaultValue}}{{#isString}}Some("{{{defaultValue}}}".to_string()){{/isString}}{{^isString}}Some({{{defaultValue}}}){{/isString}}{{/defaultValue}},
{{/required}}
{{/vars}}
        }
    }
}
{{#hasEnums}}
{{#vars}}
{{#isEnum}}
{{#allowableValues}}
/// {{#description}}{{{description}}}{{/description}}{{^description}}{{datatype}} enumeration{{/description}}
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum {{enumName}} {
{{#enumVars}}
    #[serde(rename = "{{{value}}}")]
    {{#description}}/// {{{description}}}
    {{/description}}{{name}},
{{/enumVars}}
}

impl Default for {{enumName}} {
    fn default() -> {{enumName}} {
        Self::{{#enumVars}}{{#-first}}{{name}}{{/-first}}{{/enumVars}}
    }
}
{{/allowableValues}}
{{/isEnum}}
{{/vars}}
{{/hasEnums}}
{{/model}}
{{/models}} 