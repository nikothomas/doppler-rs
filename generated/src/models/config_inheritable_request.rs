/*
 * Core
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-oas3.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/*
 * Core
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-oas3.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};
use chrono::{DateTime, NaiveDate, Utc};
/// ConfigInheritableRequest
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ConfigInheritableRequest {
    /// Unique identifier for the project object.
    #[serde(rename = "project")]
    pub project: String ,
    /// Name of the config.
    #[serde(rename = "config")]
    pub config: String ,
    /// Boolean determining if the config is inheritable or not.
    #[serde(rename = "inheritable")]
    pub inheritable: bool ,
}

impl ConfigInheritableRequest {
    pub fn new(project: String , config: String , inheritable: bool ) -> ConfigInheritableRequest {
        ConfigInheritableRequest {
            project: project,
            config: config,
            inheritable: inheritable,
        }
    }
}
 