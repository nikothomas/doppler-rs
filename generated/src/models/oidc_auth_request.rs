/*
 * Core
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-oas3.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/*
 * Core
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-oas3.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};
use chrono::{DateTime, NaiveDate, Utc};
/// OidcAuthRequest
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OidcAuthRequest {
    /// the OIDC token string from your OIDC provider (likely CI)
    #[serde(rename = "token")]
    pub token: String ,
    /// Identity ID from the Doppler Dashboard
    #[serde(rename = "identity")]
    pub identity: String ,
}

impl OidcAuthRequest {
    pub fn new(token: String , identity: String ) -> OidcAuthRequest {
        OidcAuthRequest {
            token: token,
            identity: identity,
        }
    }
}
 