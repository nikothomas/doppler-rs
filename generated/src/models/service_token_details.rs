/*
 * Core
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-oas3.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/*
 * Core
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-oas3.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};
use chrono::{DateTime, NaiveDate, Utc};
/// ServiceTokenDetails
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ServiceTokenDetails {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String >,
    #[serde(rename = "slug", skip_serializing_if = "Option::is_none")]
    pub slug: Option<String >,
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<chrono::DateTime<chrono::Utc> >,
    #[serde(rename = "key", skip_serializing_if = "Option::is_none")]
    pub key: Option<String >,
    #[serde(rename = "config", skip_serializing_if = "Option::is_none")]
    pub config: Option<String >,
    #[serde(rename = "environment", skip_serializing_if = "Option::is_none")]
    pub environment: Option<String >,
    #[serde(rename = "project", skip_serializing_if = "Option::is_none")]
    pub project: Option<String >,
    #[serde(rename = "expires_at", skip_serializing_if = "Option::is_none")]
    pub expires_at: Option<serde_json::Value >,
    #[serde(rename = "access", skip_serializing_if = "Option::is_none")]
    pub access: Option<String >,
}

impl ServiceTokenDetails {
    pub fn new() -> ServiceTokenDetails {
        ServiceTokenDetails {
            name: None,
            slug: None,
            created_at: None,
            key: None,
            config: None,
            environment: None,
            project: None,
            expires_at: None,
            access: None,
        }
    }
}
 