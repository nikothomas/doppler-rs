/*
 * Core
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-oas3.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ServiceTokensCreateRequest {
    /// Unique identifier for the project object.
    #[serde(rename = "project")]
    pub project: String,
    /// Name of the config object.
    #[serde(rename = "config")]
    pub config: String,
    /// Name of the service token.
    #[serde(rename = "name")]
    pub name: String,
    /// Unix timestamp of when token should expire.
    #[serde(rename = "expire_at", skip_serializing_if = "Option::is_none")]
    pub expire_at: Option<String>,
    /// Token's capabilities.
    #[serde(rename = "access", skip_serializing_if = "Option::is_none")]
    pub access: Option<Access>,
}

impl ServiceTokensCreateRequest {
    pub fn new(project: String, config: String, name: String) -> ServiceTokensCreateRequest {
        ServiceTokensCreateRequest {
            project,
            config,
            name,
            expire_at: None,
            access: None,
        }
    }
}
/// Token's capabilities.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Access {
    #[serde(rename = "read")]
    Read,
    #[serde(rename = "read/write")]
    ReadSlashWrite,
}

impl Default for Access {
    fn default() -> Access {
        Self::Read
    }
}

