/*
 * Core
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-oas3.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DynamicSecretsIssueLeaseRequest {
    /// The project where the dynamic secret is located
    #[serde(rename = "project")]
    pub project: String,
    /// The config where the dynamic secret is located
    #[serde(rename = "config")]
    pub config: String,
    /// The name of the dynamic secret for which to issue this lease
    #[serde(rename = "dynamic_secret")]
    pub dynamic_secret: String,
    /// The number of seconds until this lease is automatically revoked
    #[serde(rename = "ttl_sec")]
    pub ttl_sec: i32,
}

impl DynamicSecretsIssueLeaseRequest {
    pub fn new(project: String, config: String, dynamic_secret: String, ttl_sec: i32) -> DynamicSecretsIssueLeaseRequest {
        DynamicSecretsIssueLeaseRequest {
            project,
            config,
            dynamic_secret,
            ttl_sec,
        }
    }
}

