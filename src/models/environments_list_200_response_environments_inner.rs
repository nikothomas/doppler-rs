/*
 * Core
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-oas3.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EnvironmentsList200ResponseEnvironmentsInner {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "initial_fetch_at", skip_serializing_if = "Option::is_none")]
    pub initial_fetch_at: Option<String>,
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    #[serde(rename = "project", skip_serializing_if = "Option::is_none")]
    pub project: Option<String>,
}

impl EnvironmentsList200ResponseEnvironmentsInner {
    pub fn new() -> EnvironmentsList200ResponseEnvironmentsInner {
        EnvironmentsList200ResponseEnvironmentsInner {
            id: None,
            name: None,
            initial_fetch_at: None,
            created_at: None,
            project: None,
        }
    }
}

