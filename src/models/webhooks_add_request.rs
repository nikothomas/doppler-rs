/*
 * Core
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-oas3.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WebhooksAddRequest {
    /// The webhook URL. Must be https
    #[serde(rename = "url")]
    pub url: String,
    /// See: https://docs.doppler.com/docs/webhooks#verify-webhook-with-request-signing
    #[serde(rename = "secret", skip_serializing_if = "Option::is_none")]
    pub secret: Option<String>,
    #[serde(rename = "authentication", skip_serializing_if = "Option::is_none")]
    pub authentication: Option<models::WebhooksAddRequestAuthentication>,
    /// See: https://docs.doppler.com/docs/webhooks#default-payload
    #[serde(rename = "payload", skip_serializing_if = "Option::is_none")]
    pub payload: Option<String>,
    /// Config slugs that the webhook should be enabled for
    #[serde(rename = "enableConfigs", skip_serializing_if = "Option::is_none")]
    pub enable_configs: Option<Vec<String>>,
    /// The name of the webhook.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

impl WebhooksAddRequest {
    pub fn new(url: String) -> WebhooksAddRequest {
        WebhooksAddRequest {
            url,
            secret: None,
            authentication: None,
            payload: None,
            enable_configs: None,
            name: None,
        }
    }
}

