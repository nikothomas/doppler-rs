/*
 * Core
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-oas3.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChangeRequestPoliciesUpdateRequestRulesInnerSubjectsInner {
    /// The type of the subject.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// The unique identifier of the subject.
    #[serde(rename = "slug")]
    pub slug: String,
}

impl ChangeRequestPoliciesUpdateRequestRulesInnerSubjectsInner {
    pub fn new(r#type: Type, slug: String) -> ChangeRequestPoliciesUpdateRequestRulesInnerSubjectsInner {
        ChangeRequestPoliciesUpdateRequestRulesInnerSubjectsInner {
            r#type,
            slug,
        }
    }
}
/// The type of the subject.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "\"WorkplaceUser\"")]
    DoubleQuoteWorkplaceUserDoubleQuote,
    #[serde(rename = "\"Group\"")]
    DoubleQuoteGroupDoubleQuote,
}

impl Default for Type {
    fn default() -> Type {
        Self::DoubleQuoteWorkplaceUserDoubleQuote
    }
}

